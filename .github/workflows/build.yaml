name: Build

on: 
  push: 
    branches: [master]

jobs:
  rust_build:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup/toolchains
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo apt -y install musl-tools upx
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: x86_64-unknown-linux-musl
          components: rustfmt, clippy
          override: true
          default: true
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache-dependency-path: ./server/sdwp/web/yarn.lock
      - name: build
        run: ./build.sh
      - name: post build
        run: ./post_build.sh
      - run: tar -cvf out.tar out/
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: out.tar

  push_usersvr:
    runs-on: ubuntu-latest
    needs: rust_build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - run: tar -xvf out.tar
      - uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2.2.2
        with:
          context: out/usersvr
          push: true
          tags: ${{ secrets.DOCKER_PREFIX }}usersvr:${{ github.sha }}, ${{ secrets.DOCKER_PREFIX }}usersvr:latest
  push_sdwp:
    runs-on: ubuntu-latest
    needs: rust_build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - run: tar -xvf out.tar
      - uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2.2.2
        with:
          context: out/sdwp
          push: true
          tags: ${{ secrets.DOCKER_PREFIX }}sdwp:${{ github.sha }}, ${{ secrets.DOCKER_PREFIX }}sdwp:latest
  push_sessionsvr:
    runs-on: ubuntu-latest
    needs: rust_build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - run: tar -xvf out.tar
      - uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2.2.2
        with:
          context: out/sessionsvr
          push: true
          tags: ${{ secrets.DOCKER_PREFIX }}sessionsvr:${{ github.sha }}, ${{ secrets.DOCKER_PREFIX }}sessionsvr:latest
  push_gateway:
    runs-on: ubuntu-latest
    needs: rust_build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - run: tar -xvf out.tar
      - uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2.2.2
        with:
          context: out/gateway
          push: true
          tags: ${{ secrets.DOCKER_PREFIX }}gateway:${{ github.sha }}, ${{ secrets.DOCKER_PREFIX }}gateway:latest
  push_idsvr:
    runs-on: ubuntu-latest
    needs: rust_build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - run: tar -xvf out.tar
      - uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2.2.2
        with:
          context: out/idsvr
          push: true
          tags: ${{ secrets.DOCKER_PREFIX }}idsvr:${{ github.sha }}, ${{ secrets.DOCKER_PREFIX }}idsvr:latest
  push_testsvr:
    runs-on: ubuntu-latest
    needs: rust_build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - run: tar -xvf out.tar
      - uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2.2.2
        with:
          context: out/testsvr
          push: true
          tags: ${{ secrets.DOCKER_PREFIX }}testsvr:${{ github.sha }}, ${{ secrets.DOCKER_PREFIX }}testsvr:latest
